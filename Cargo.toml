[package]
name = "phtheirichthys"
version = "0.1.38"
authors = ["Arnaud Bouts <arnaud.bouts@orange.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
anyhow = "1.0.86"
async-trait = "0.1.80"
async-recursion = "1.1.1"
byteorder = "1.5.0"
chrono = { version = "0.4.38", default = false, features = ['serde', 'wasmbind'] }
chrono-humanize = "0.2.3"
console_log = "1.0.0"
gloo = { version = "0.11.0", features = ['timers'] }
image = "0.25.1"
libm = "0.2.8"
log = "0.4.21"
once_cell = "1.19.0"
reqwest = { version = "0.12", features = ["json"] }
serde = { version = "1.0.202", features = ["derive"] }
serde-wasm-bindgen = "0.6.5"
tsify = { version = "0.4.5", default = false, features = ['js'] }
wasm-bindgen = "0.2.92"
wasm-bindgen-futures = "0.4.42"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

[dependencies.web-sys]
version = "0.3.69"
features = [
    'console',
    'FileSystemDirectoryHandle',
    'FileSystemFileHandle',
    'FileSystemGetFileOptions',
    'Navigator',
    'StorageManager',
    'Window',
    'Headers',
    'Request',
    'RequestInit',
    'RequestMode',
    'Response',
    'Url',
    'UrlSearchParams',
    'Blob',
    'WorkerGlobalScope',
]

[dev-dependencies]
wasm-bindgen-test = "0.3.42"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
